/**
 * PostgREST API
 * This is a dynamic API generated by PostgREST
 *
 * The version of the OpenAPI document: 7.0.1 (UNKNOWN)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import { IssueComments } from "../models";
export interface IssueCommentsDeleteRequest {
  id?: string;
  issueProviderId?: string;
  commentProviderId?: string;
  createdBy?: string;
  body?: string;
  createdAt?: string;
  updatedAt?: string;
  scannedAt?: string;
  prefer?: IssueCommentsDeletePreferEnum;
}
export interface IssueCommentsGetRequest {
  id?: string;
  issueProviderId?: string;
  commentProviderId?: string;
  createdBy?: string;
  body?: string;
  createdAt?: string;
  updatedAt?: string;
  scannedAt?: string;
  select?: string;
  order?: string;
  range?: string;
  rangeUnit?: string;
  offset?: string;
  limit?: string;
  prefer?: IssueCommentsGetPreferEnum;
}
export interface IssueCommentsPatchRequest {
  id?: string;
  issueProviderId?: string;
  commentProviderId?: string;
  createdBy?: string;
  body?: string;
  createdAt?: string;
  updatedAt?: string;
  scannedAt?: string;
  prefer?: IssueCommentsPatchPreferEnum;
  issueComments?: IssueComments;
}
export interface IssueCommentsPostRequest {
  select?: string;
  prefer?: IssueCommentsPostPreferEnum;
  issueComments?: IssueComments;
}
/**
 *
 */
export declare class IssueCommentsApi extends runtime.BaseAPI {
  /**
   */
  issueCommentsDeleteRaw(
    requestParameters: IssueCommentsDeleteRequest
  ): Promise<runtime.ApiResponse<void>>;
  /**
   */
  issueCommentsDelete(
    requestParameters: IssueCommentsDeleteRequest
  ): Promise<void>;
  /**
   */
  issueCommentsGetRaw(
    requestParameters: IssueCommentsGetRequest
  ): Promise<runtime.ApiResponse<Array<IssueComments>>>;
  /**
   */
  issueCommentsGet(
    requestParameters: IssueCommentsGetRequest
  ): Promise<Array<IssueComments>>;
  /**
   */
  issueCommentsPatchRaw(
    requestParameters: IssueCommentsPatchRequest
  ): Promise<runtime.ApiResponse<void>>;
  /**
   */
  issueCommentsPatch(
    requestParameters: IssueCommentsPatchRequest
  ): Promise<void>;
  /**
   */
  issueCommentsPostRaw(
    requestParameters: IssueCommentsPostRequest
  ): Promise<runtime.ApiResponse<void>>;
  /**
   */
  issueCommentsPost(requestParameters: IssueCommentsPostRequest): Promise<void>;
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssueCommentsDeletePreferEnum {
  Representation = "return=representation",
  Minimal = "return=minimal",
  None = "return=none",
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssueCommentsGetPreferEnum {
  Countnone = "count=none",
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssueCommentsPatchPreferEnum {
  Representation = "return=representation",
  Minimal = "return=minimal",
  None = "return=none",
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssueCommentsPostPreferEnum {
  Representation = "return=representation",
  Minimal = "return=minimal",
  None = "return=none",
}
//# sourceMappingURL=IssueCommentsApi.d.ts.map

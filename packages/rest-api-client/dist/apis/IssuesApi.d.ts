/**
 * PostgREST API
 * This is a dynamic API generated by PostgREST
 *
 * The version of the OpenAPI document: 7.0.1 (UNKNOWN)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import { Issues } from "../models";
export interface IssuesDeleteRequest {
  id?: string;
  providerId?: string;
  projectProviderId?: string;
  title?: string;
  status?: string;
  type?: string;
  subType?: string;
  ownedBy?: string;
  assignedTo?: string;
  assignedToType?: string;
  dueDate?: string;
  scannedAt?: string;
  prefer?: IssuesDeletePreferEnum;
}
export interface IssuesGetRequest {
  id?: string;
  providerId?: string;
  projectProviderId?: string;
  title?: string;
  status?: string;
  type?: string;
  subType?: string;
  ownedBy?: string;
  assignedTo?: string;
  assignedToType?: string;
  dueDate?: string;
  scannedAt?: string;
  select?: string;
  order?: string;
  range?: string;
  rangeUnit?: string;
  offset?: string;
  limit?: string;
  prefer?: IssuesGetPreferEnum;
}
export interface IssuesPatchRequest {
  id?: string;
  providerId?: string;
  projectProviderId?: string;
  title?: string;
  status?: string;
  type?: string;
  subType?: string;
  ownedBy?: string;
  assignedTo?: string;
  assignedToType?: string;
  dueDate?: string;
  scannedAt?: string;
  prefer?: IssuesPatchPreferEnum;
  issues?: Issues;
}
export interface IssuesPostRequest {
  select?: string;
  prefer?: IssuesPostPreferEnum;
  issues?: Issues;
}
/**
 *
 */
export declare class IssuesApi extends runtime.BaseAPI {
  /**
   */
  issuesDeleteRaw(
    requestParameters: IssuesDeleteRequest
  ): Promise<runtime.ApiResponse<void>>;
  /**
   */
  issuesDelete(requestParameters: IssuesDeleteRequest): Promise<void>;
  /**
   */
  issuesGetRaw(
    requestParameters: IssuesGetRequest
  ): Promise<runtime.ApiResponse<Array<Issues>>>;
  /**
   */
  issuesGet(requestParameters: IssuesGetRequest): Promise<Array<Issues>>;
  /**
   */
  issuesPatchRaw(
    requestParameters: IssuesPatchRequest
  ): Promise<runtime.ApiResponse<void>>;
  /**
   */
  issuesPatch(requestParameters: IssuesPatchRequest): Promise<void>;
  /**
   */
  issuesPostRaw(
    requestParameters: IssuesPostRequest
  ): Promise<runtime.ApiResponse<void>>;
  /**
   */
  issuesPost(requestParameters: IssuesPostRequest): Promise<void>;
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssuesDeletePreferEnum {
  Representation = "return=representation",
  Minimal = "return=minimal",
  None = "return=none",
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssuesGetPreferEnum {
  Countnone = "count=none",
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssuesPatchPreferEnum {
  Representation = "return=representation",
  Minimal = "return=minimal",
  None = "return=none",
}
/**
 * @export
 * @enum {string}
 */
export declare enum IssuesPostPreferEnum {
  Representation = "return=representation",
  Minimal = "return=minimal",
  None = "return=none",
}
//# sourceMappingURL=IssuesApi.d.ts.map

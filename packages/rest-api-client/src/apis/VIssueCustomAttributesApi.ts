/* tslint:disable */
/* eslint-disable */
/**
 * PostgREST API
 * This is a dynamic API generated by PostgREST
 *
 * The version of the OpenAPI document: 7.0.1 (UNKNOWN)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import {
  VIssueCustomAttributes,
  VIssueCustomAttributesFromJSON,
  VIssueCustomAttributesToJSON,
} from "../models";

export interface VIssueCustomAttributesGetRequest {
  id?: string;
  providerId?: string;
  attributes?: string;
  select?: string;
  order?: string;
  range?: string;
  rangeUnit?: string;
  offset?: string;
  limit?: string;
  prefer?: VIssueCustomAttributesGetPreferEnum;
}

/**
 *
 */
export class VIssueCustomAttributesApi extends runtime.BaseAPI {
  /**
   */
  async vIssueCustomAttributesGetRaw(
    requestParameters: VIssueCustomAttributesGetRequest
  ): Promise<runtime.ApiResponse<Array<VIssueCustomAttributes>>> {
    const queryParameters: any = {};

    if (requestParameters.id !== undefined) {
      queryParameters["id"] = requestParameters.id;
    }

    if (requestParameters.providerId !== undefined) {
      queryParameters["provider_id"] = requestParameters.providerId;
    }

    if (requestParameters.attributes !== undefined) {
      queryParameters["attributes"] = requestParameters.attributes;
    }

    if (requestParameters.select !== undefined) {
      queryParameters["select"] = requestParameters.select;
    }

    if (requestParameters.order !== undefined) {
      queryParameters["order"] = requestParameters.order;
    }

    if (requestParameters.offset !== undefined) {
      queryParameters["offset"] = requestParameters.offset;
    }

    if (requestParameters.limit !== undefined) {
      queryParameters["limit"] = requestParameters.limit;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    if (
      requestParameters.range !== undefined &&
      requestParameters.range !== null
    ) {
      headerParameters["Range"] = String(requestParameters.range);
    }

    if (
      requestParameters.rangeUnit !== undefined &&
      requestParameters.rangeUnit !== null
    ) {
      headerParameters["Range-Unit"] = String(requestParameters.rangeUnit);
    }

    if (
      requestParameters.prefer !== undefined &&
      requestParameters.prefer !== null
    ) {
      headerParameters["Prefer"] = String(requestParameters.prefer);
    }

    const response = await this.request({
      path: `/v_issue_custom_attributes`,
      method: "GET",
      headers: headerParameters,
      query: queryParameters,
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(VIssueCustomAttributesFromJSON)
    );
  }

  /**
   */
  async vIssueCustomAttributesGet(
    requestParameters: VIssueCustomAttributesGetRequest
  ): Promise<Array<VIssueCustomAttributes>> {
    const response = await this.vIssueCustomAttributesGetRaw(requestParameters);
    return await response.value();
  }
}

/**
 * @export
 * @enum {string}
 */
export enum VIssueCustomAttributesGetPreferEnum {
  Countnone = "count=none",
}

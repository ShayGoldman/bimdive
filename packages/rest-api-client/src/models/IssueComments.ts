/* tslint:disable */
/* eslint-disable */
/**
 * PostgREST API
 * This is a dynamic API generated by PostgREST
 *
 * The version of the OpenAPI document: 7.0.1 (UNKNOWN)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface IssueComments
 */
export interface IssueComments {
  /**
   * Note:
   * This is a Primary Key.<pk/>
   * @type {string}
   * @memberof IssueComments
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof IssueComments
   */
  issueProviderId: string;
  /**
   *
   * @type {string}
   * @memberof IssueComments
   */
  commentProviderId: string;
  /**
   *
   * @type {string}
   * @memberof IssueComments
   */
  createdBy?: string;
  /**
   *
   * @type {string}
   * @memberof IssueComments
   */
  body?: string;
  /**
   *
   * @type {string}
   * @memberof IssueComments
   */
  createdAt: string;
  /**
   *
   * @type {string}
   * @memberof IssueComments
   */
  updatedAt: string;
  /**
   *
   * @type {string}
   * @memberof IssueComments
   */
  scannedAt: string;
}

export function IssueCommentsFromJSON(json: any): IssueComments {
  return IssueCommentsFromJSONTyped(json, false);
}

export function IssueCommentsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): IssueComments {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    issueProviderId: json["issue_provider_id"],
    commentProviderId: json["comment_provider_id"],
    createdBy: !exists(json, "created_by") ? undefined : json["created_by"],
    body: !exists(json, "body") ? undefined : json["body"],
    createdAt: json["created_at"],
    updatedAt: json["updated_at"],
    scannedAt: json["scanned_at"],
  };
}

export function IssueCommentsToJSON(value?: IssueComments | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    issue_provider_id: value.issueProviderId,
    comment_provider_id: value.commentProviderId,
    created_by: value.createdBy,
    body: value.body,
    created_at: value.createdAt,
    updated_at: value.updatedAt,
    scanned_at: value.scannedAt,
  };
}
